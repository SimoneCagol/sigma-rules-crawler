{"description": "Detects Commandlet names from well-known PowerShell exploitation frameworks", "enabled": false, "false_positives": ["Unknown"], "filters": [], "from": "now-360s", "immutable": false, "index": ["winlogbeat-*"], "interval": "5m", "rule_id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6", "language": "lucene", "max_signals": 100, "risk_score": 65, "name": "Malicious PowerShell Commandlets", "query": "(powershell.file.script_block_text:(*Invoke\\-DllInjection* OR *Invoke\\-Shellcode* OR *Invoke\\-WmiCommand* OR *Get\\-GPPPassword* OR *Get\\-Keystrokes* OR *Get\\-TimedScreenshot* OR *Get\\-VaultCredential* OR *Invoke\\-CredentialInjection* OR *Invoke\\-Mimikatz* OR *Invoke\\-NinjaCopy* OR *Invoke\\-TokenManipulation* OR *Out\\-Minidump* OR *VolumeShadowCopyTools* OR *Invoke\\-ReflectivePEInjection* OR *Invoke\\-UserHunter* OR *Find\\-GPOLocation* OR *Invoke\\-ACLScanner* OR *Invoke\\-DowngradeAccount* OR *Get\\-ServiceUnquoted* OR *Get\\-ServiceFilePermission* OR *Get\\-ServicePermission* OR *Invoke\\-ServiceAbuse* OR *Install\\-ServiceBinary* OR *Get\\-RegAutoLogon* OR *Get\\-VulnAutoRun* OR *Get\\-VulnSchTask* OR *Get\\-UnattendedInstallFile* OR *Get\\-ApplicationHost* OR *Get\\-RegAlwaysInstallElevated* OR *Get\\-Unconstrained* OR *Add\\-RegBackdoor* OR *Add\\-ScrnSaveBackdoor* OR *Gupt\\-Backdoor* OR *Invoke\\-ADSBackdoor* OR *Enabled\\-DuplicateToken* OR *Invoke\\-PsUaCme* OR *Remove\\-Update* OR *Check\\-VM* OR *Get\\-LSASecret* OR *Get\\-PassHashes* OR *Show\\-TargetScreen* OR *Port\\-Scan* OR *Invoke\\-PoshRatHttp* OR *Invoke\\-PowerShellTCP* OR *Invoke\\-PowerShellWMI* OR *Add\\-Exfiltration* OR *Add\\-Persistence* OR *Do\\-Exfiltration* OR *Start\\-CaptureServer* OR *Get\\-ChromeDump* OR *Get\\-ClipboardContents* OR *Get\\-FoxDump* OR *Get\\-IndexedItem* OR *Get\\-Screenshot* OR *Invoke\\-Inveigh* OR *Invoke\\-NetRipper* OR *Invoke\\-EgressCheck* OR *Invoke\\-PostExfil* OR *Invoke\\-PSInject* OR *Invoke\\-RunAs* OR *MailRaider* OR *New\\-HoneyHash* OR *Set\\-MacAttribute* OR *Invoke\\-DCSync* OR *Invoke\\-PowerDump* OR *Exploit\\-Jboss* OR *Invoke\\-ThunderStruck* OR *Invoke\\-VoiceTroll* OR *Set\\-Wallpaper* OR *Invoke\\-InveighRelay* OR *Invoke\\-PsExec* OR *Invoke\\-SSHCommand* OR *Get\\-SecurityPackages* OR *Install\\-SSP* OR *Invoke\\-BackdoorLNK* OR *PowerBreach* OR *Get\\-SiteListPassword* OR *Get\\-System* OR *Invoke\\-BypassUAC* OR *Invoke\\-Tater* OR *Invoke\\-WScriptBypassUAC* OR *PowerUp* OR *PowerView* OR *Get\\-RickAstley* OR *Find\\-Fruit* OR *HTTP\\-Login* OR *Find\\-TrustedDocuments* OR *Invoke\\-Paranoia* OR *Invoke\\-WinEnum* OR *Invoke\\-ARPScan* OR *Invoke\\-PortScan* OR *Invoke\\-ReverseDNSLookup* OR *Invoke\\-SMBScanner* OR *Invoke\\-Mimikittenz* OR *Invoke\\-AllChecks* OR *Invoke\\-BadPotato* OR *Invoke\\-BetterSafetyKatz* OR *Invoke\\-Carbuncle* OR *Invoke\\-Certify* OR *Invoke\\-DAFT* OR *Invoke\\-DinvokeKatz* OR *Invoke\\-Eyewitness* OR *Invoke\\-FakeLogonScreen* OR *Invoke\\-Farmer* OR *Invoke\\-Get\\-RBCD\\-Threaded* OR *Invoke\\-Gopher* OR *Invoke\\-Grouper2* OR *Invoke\\-HandleKatz* OR *Invoke\\-Internalmonologue* OR *Invoke\\-KrbRelayUp* OR *Invoke\\-LdapSignCheck* OR *Invoke\\-Lockless* OR *Invoke\\-MITM6* OR *Invoke\\-NanoDump* OR *Invoke\\-OxidResolver* OR *Invoke\\-P0wnedshell* OR *Invoke\\-PPLDump* OR *Invoke\\-Rubeus* OR *Invoke\\-SCShell* OR *Invoke\\-SafetyKatz* OR *Invoke\\-SauronEye* OR *Invoke\\-Seatbelt* OR *Invoke\\-SharPersist* OR *Invoke\\-SharpAllowedToAct* OR *Invoke\\-SharpBlock* OR *Invoke\\-SharpBypassUAC* OR *Invoke\\-SharpChromium* OR *Invoke\\-SharpClipboard* OR *Invoke\\-SharpCloud* OR *Invoke\\-SharpDPAPI* OR *Invoke\\-SharpDump* OR *Invoke\\-SharpGPO\\-RemoteAccessPolicies* OR *Invoke\\-SharpGPOAbuse* OR *Invoke\\-SharpHandler* OR *Invoke\\-SharpHide* OR *Invoke\\-SharpHound4* OR *Invoke\\-SharpImpersonation* OR *Invoke\\-SharpImpersonationNoSpace* OR *Invoke\\-SharpKatz* OR *Invoke\\-SharpLdapRelayScan* OR *Invoke\\-SharpLoginPrompt* OR *Invoke\\-SharpMove* OR *Invoke\\-SharpPrintNightmare* OR *Invoke\\-SharpPrinter* OR *Invoke\\-SharpRDP* OR *Invoke\\-SharpSSDP* OR *Invoke\\-SharpSecDump* OR *Invoke\\-SharpSniper* OR *Invoke\\-SharpSploit* OR *Invoke\\-SharpSpray* OR *Invoke\\-SharpStay* OR *Invoke\\-SharpUp* OR *Invoke\\-SharpWatson* OR *Invoke\\-Sharphound2* OR *Invoke\\-Sharphound3* OR *Invoke\\-Sharplocker* OR *Invoke\\-Sharpshares* OR *Invoke\\-Sharpview* OR *Invoke\\-Sharpweb* OR *Invoke\\-Snaffler* OR *Invoke\\-Spoolsample* OR *Invoke\\-StandIn* OR *Invoke\\-StickyNotesExtract* OR *Invoke\\-Thunderfox* OR *Invoke\\-Tokenvator* OR *Invoke\\-UrbanBishop* OR *Invoke\\-Whisker* OR *Invoke\\-WireTap* OR *Invoke\\-winPEAS* OR *Invoke\\-Zerologon* OR *Get\\-USBKeystrokes* OR *Start\\-WebcamRecorder* OR *Invoke\\-OfficeScrape*) AND (NOT ((powershell.file.script_block_text:(*Get\\-SystemDriveInfo* OR *C\\:\\\\ProgramData\\\\Amazon\\\\EC2\\-Windows\\\\Launch\\\\Module\\\\*)) OR (powershell.file.script_block_text:#\\ Copyright\\ 2016\\ Amazon.com,\\ Inc.\\ or\\ its\\ affiliates.\\ All\\ Rights\\ Reserved*))))", "meta": {"from": "1m"}, "severity": "high", "tags": ["T1059"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0002", "reference": "https://attack.mitre.org/tactics/TA0002", "name": "Execution"}, "framework": "MITRE ATT&CK\u00ae", "technique": [{"id": "T1059", "name": "Command and Scripting Interpreter", "reference": "https://attack.mitre.org/techniques/T1059"}]}], "version": 1, "references": ["https://adsecurity.org/?p=2921", "https://github.com/S3cur3Th1sSh1t/PowerSharpPack/tree/master/PowerSharpBinaries", "https://github.com/BC-SECURITY/Invoke-ZeroLogon/blob/111d17c7fec486d9bb23387e2e828b09a26075e4/Invoke-ZeroLogon.ps1", "https://github.com/xorrior/RandomPS-Scripts/blob/848c919bfce4e2d67b626cbcf4404341cfe3d3b6/Get-DXWebcamVideo.ps1", "https://github.com/rvrsh3ll/Misc-Powershell-Scripts/blob/6f23bb41f9675d7e2d32bacccff75e931ae00554/OfficeMemScraper.ps1"], "timestamp_override": "event.ingested", "author": ["Sean Metcalf (source)", "Florian Roth (rule)", "Bartlomiej Czyz @bczyz1 (update)", "oscd.community (update)", "Nasreddine Bencherchali (update)", "Tim Shelton (fp)"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md"}
