{"description": "Detects a typical pattern of a CobaltStrike BOF which inject into other processes", "author": ["Christian Burkard"], "enabled": false, "false_positives": ["Unknown"], "filters": [], "from": "now-360s", "immutable": false, "index": ["winlogbeat-*"], "interval": "5m", "rule_id": "46a0b6b3-7989-c7ca-8fac-e4d12e4b0f52", "language": "lucene", "max_signals": 100, "risk_score": 65, "name": "CobaltStrike BOF Injection Pattern", "query": "((winlog.event_data.CallTrace:/^/ OR winlog.event_data.CallTrace:/C/ OR winlog.event_data.CallTrace:/:/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/W/ OR winlog.event_data.CallTrace:/i/ OR winlog.event_data.CallTrace:/n/ OR winlog.event_data.CallTrace:/d/ OR winlog.event_data.CallTrace:/o/ OR winlog.event_data.CallTrace:/w/ OR winlog.event_data.CallTrace:/s/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/S/ OR winlog.event_data.CallTrace:/Y/ OR winlog.event_data.CallTrace:/S/ OR winlog.event_data.CallTrace:/T/ OR winlog.event_data.CallTrace:/E/ OR winlog.event_data.CallTrace:/M/ OR winlog.event_data.CallTrace:/3/ OR winlog.event_data.CallTrace:/2/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/n/ OR winlog.event_data.CallTrace:/t/ OR winlog.event_data.CallTrace:/d/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/./ OR winlog.event_data.CallTrace:/d/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/+/ OR winlog.event_data.CallTrace:/[/ OR winlog.event_data.CallTrace:/a/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/z/ OR winlog.event_data.CallTrace:/0/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/9/ OR winlog.event_data.CallTrace:/]/ OR winlog.event_data.CallTrace:/{/ OR winlog.event_data.CallTrace:/4/ OR winlog.event_data.CallTrace:/,/ OR winlog.event_data.CallTrace:/6/ OR winlog.event_data.CallTrace:/}/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/|/ OR winlog.event_data.CallTrace:/C/ OR winlog.event_data.CallTrace:/:/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/W/ OR winlog.event_data.CallTrace:/i/ OR winlog.event_data.CallTrace:/n/ OR winlog.event_data.CallTrace:/d/ OR winlog.event_data.CallTrace:/o/ OR winlog.event_data.CallTrace:/w/ OR winlog.event_data.CallTrace:/s/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/S/ OR winlog.event_data.CallTrace:/y/ OR winlog.event_data.CallTrace:/s/ OR winlog.event_data.CallTrace:/t/ OR winlog.event_data.CallTrace:/e/ OR winlog.event_data.CallTrace:/m/ OR winlog.event_data.CallTrace:/3/ OR winlog.event_data.CallTrace:/2/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/K/ OR winlog.event_data.CallTrace:/E/ OR winlog.event_data.CallTrace:/R/ OR winlog.event_data.CallTrace:/N/ OR winlog.event_data.CallTrace:/E/ OR winlog.event_data.CallTrace:/L/ OR winlog.event_data.CallTrace:/B/ OR winlog.event_data.CallTrace:/A/ OR winlog.event_data.CallTrace:/S/ OR winlog.event_data.CallTrace:/E/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/./ OR winlog.event_data.CallTrace:/d/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/l/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/+/ OR winlog.event_data.CallTrace:/[/ OR winlog.event_data.CallTrace:/a/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/z/ OR winlog.event_data.CallTrace:/0/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/9/ OR winlog.event_data.CallTrace:/]/ OR winlog.event_data.CallTrace:/{/ OR winlog.event_data.CallTrace:/4/ OR winlog.event_data.CallTrace:/,/ OR winlog.event_data.CallTrace:/6/ OR winlog.event_data.CallTrace:/}/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/|/ OR winlog.event_data.CallTrace:/U/ OR winlog.event_data.CallTrace:/N/ OR winlog.event_data.CallTrace:/K/ OR winlog.event_data.CallTrace:/N/ OR winlog.event_data.CallTrace:/O/ OR winlog.event_data.CallTrace:/W/ OR winlog.event_data.CallTrace:/N/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/(/ OR winlog.event_data.CallTrace:/[/ OR winlog.event_data.CallTrace:/A/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/Z/ OR winlog.event_data.CallTrace:/0/ OR winlog.event_data.CallTrace:/-/ OR winlog.event_data.CallTrace:/9/ OR winlog.event_data.CallTrace:/]/ OR winlog.event_data.CallTrace:/{/ OR winlog.event_data.CallTrace:/1/ OR winlog.event_data.CallTrace:/6/ OR winlog.event_data.CallTrace:/}/ OR winlog.event_data.CallTrace:/\\/ OR winlog.event_data.CallTrace:/)/ OR winlog.event_data.CallTrace:/$/) AND winlog.event_data.GrantedAccess:(\"0x1028\" OR \"0x1fffff\"))", "meta": {"from": "1m"}, "severity": "high", "tags": ["Defense Evasion", "T1106", "T1562"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0002", "reference": "https://attack.mitre.org/tactics/TA0002", "name": "Execution"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1106", "name": "Native API", "reference": "https://attack.mitre.org/techniques/T1106"}]}, {"tactic": {"id": "TA0005", "reference": "https://attack.mitre.org/tactics/TA0005", "name": "Defense Evasion"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1562", "name": "Impair Defenses", "reference": "https://attack.mitre.org/techniques/T1562"}]}], "version": 1, "references": ["https://github.com/boku7/injectAmsiBypass", "https://github.com/boku7/spawn"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md", "timestamp_override": "event.ingested"}
