{"description": "Detects the modification of an existing service in order to execute an arbitrary payload when the service is started or killed as a potential method for persistence.", "author": ["Sreeman"], "enabled": false, "false_positives": ["Unknown"], "filters": [], "from": "now-360s", "immutable": false, "index": ["winlogbeat-*"], "interval": "5m", "rule_id": "38879043-7e1e-47a9-8d46-6bec88e201df", "language": "lucene", "max_signals": 100, "risk_score": 35, "name": "Potential Persistence Attempt Via Existing Service Tampering", "query": "(((((process.command_line.text:\"*sc\\ *\" AND process.command_line.text:\"*config\\ *\" AND process.command_line.text:\"*binpath\\=*\")) OR ((process.command_line.text:\"*sc\\ *\" AND process.command_line.text:\"*failure*\" AND process.command_line.text:\"*command\\=*\")))) OR (((((process.command_line.text:\"*reg\\ *\" AND process.command_line.text:\"*add\\ *\" AND process.command_line.text:\"*FailureCommand*\")) OR ((process.command_line.text:\"*reg\\ *\" AND process.command_line.text:\"*add\\ *\" AND process.command_line.text:\"*ImagePath*\"))) AND process.command_line.text:(\"*.sh*\" OR \"*.exe*\" OR \"*.dll*\" OR \"*.bin$*\" OR \"*.bat*\" OR \"*.cmd*\" OR \"*.js*\" OR \"*.msh$*\" OR \"*.reg$*\" OR \"*.scr*\" OR \"*.ps*\" OR \"*.vb*\" OR \"*.jar*\" OR \"*.pl*\"))))", "meta": {"from": "1m"}, "severity": "medium", "tags": ["T1543", "T1574"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0003", "reference": "https://attack.mitre.org/tactics/TA0003", "name": "Persistence"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1543", "name": "Create or Modify System Process", "reference": "https://attack.mitre.org/techniques/T1543"}, {"id": "T1574", "name": "Hijack Execution Flow", "reference": "https://attack.mitre.org/techniques/T1574"}]}], "version": 1, "references": ["https://pentestlab.blog/2020/01/22/persistence-modify-existing-service/"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md", "timestamp_override": "event.ingested"}
