{"description": "Detects the PowerShell command lines with special characters", "author": ["Teymur Kheirkhabarov (idea)", "Vasiliy Burov (rule)", "oscd.community", "Tim Shelton (fp)"], "enabled": false, "false_positives": ["Unlikely", "Amazon SSM Document Worker", "Windows Defender ATP"], "filters": [], "from": "now-360s", "immutable": false, "index": ["winlogbeat-*"], "interval": "5m", "rule_id": "cc724689-7cc5-061f-3de5-279736ca543f", "language": "lucene", "max_signals": 100, "risk_score": 65, "name": "Suspicious PowerShell Command Line", "query": "(((((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/+/ OR process.command_line.text:/./ OR process.command_line.text:/*/))) OR ((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/))) OR ((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/))) OR ((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/^/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/^/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/^/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/^/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/^/ OR process.command_line.text:/./ OR process.command_line.text:/*/))) OR ((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/`/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/`/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/`/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/`/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/`/ OR process.command_line.text:/./ OR process.command_line.text:/*/)))) AND (NOT (process.parent.executable.text:\"C:\\Program Files\\Amazon\\SSM\\ssm-document-worker.exe\"))) AND (NOT ((process.executable.text:(*\\\\powershell.exe OR *\\\\pwsh.exe) AND (process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/ OR process.command_line.text:/\\/ OR process.command_line.text:/{/ OR process.command_line.text:/./ OR process.command_line.text:/*/) AND process.command_line.text:(*new\\ EventSource\\(\\\"Microsoft.Windows.Sense.Client.Management\\\"* OR *public\\ static\\ extern\\ bool\\ InstallELAMCertificateInfo\\(SafeFileHandle\\ handle\\);*)))))", "meta": {"from": "1m"}, "severity": "high", "tags": ["Defense Evasion", "T1027", "T1059"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0002", "reference": "https://attack.mitre.org/tactics/TA0002", "name": "Execution"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1059", "name": "Command and Scripting Interpreter", "reference": "https://attack.mitre.org/techniques/T1059"}]}, {"tactic": {"id": "TA0005", "reference": "https://attack.mitre.org/tactics/TA0005", "name": "Defense Evasion"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1027", "name": "Obfuscated Files or Information", "reference": "https://attack.mitre.org/techniques/T1027"}]}], "version": 1, "references": ["https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=64"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md", "timestamp_override": "event.ingested"}
