{"description": "Detects SQL Injection attempts via GET requests in access logs", "enabled": false, "false_positives": ["Java scripts and CSS Files", "User searches in search boxes of the respective website", "Internal vulnerability scanners can cause some serious FPs when used, if you experience a lot of FPs due to this think of adding more filters such as \"User Agent\" strings and more response codes"], "filters": [], "from": "now-360s", "immutable": false, "index": ["filebeat-*"], "interval": "5m", "rule_id": "b6fbbebb-5d28-1f7a-0f87-2f6a47f02960", "language": "lucene", "max_signals": 100, "risk_score": 65, "name": "SQL Injection Strings", "query": "((http.request.method:\"GET\" AND (*\\=select* OR *UNION\\ SELECT* OR *UNION%20SELECT* OR *UNION\\ ALL\\ SELECT* OR *UNION%20ALL%20SELECT* OR *CONCAT\\(0x* OR *order\\ by\\ * OR *order%20by%20* OR *information_schema.tables* OR *group_concat\\(* OR *table_schema* OR *select%28sleep%2810%29* OR *@@version* OR *'1'\\='1* OR *%271%27%3D%271* OR *SELECTCHAR\\(* OR *select\\ *\\ * OR *select%20*%20* OR *or\\ 1\\=1#* OR *or%201\\=1#*)) AND (NOT ((http.response.status_code:\"404\") OR (*\\=select2*))))", "meta": {"from": "1m"}, "severity": "high", "tags": [], "to": "now", "type": "query", "threat": [], "version": 1, "references": ["https://www.acunetix.com/blog/articles/exploiting-sql-injection-example/", "https://www.acunetix.com/blog/articles/using-logs-to-investigate-a-web-application-attack/", "https://brightsec.com/blog/sql-injection-payloads/", "https://github.com/payloadbox/sql-injection-payload-list"], "timestamp_override": "event.ingested", "author": ["Saw Win Naung", "Nasreddine Bencherchali"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md"}
