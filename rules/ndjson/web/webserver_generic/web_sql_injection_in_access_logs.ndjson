{"description": "Detects SQL Injection attempts via GET requests in access logs", "author": ["Saw Win Naung", "Nasreddine Bencherchali (Nextron Systems)"], "enabled": false, "false_positives": ["Java scripts and CSS Files", "User searches in search boxes of the respective website", "Internal vulnerability scanners can cause some serious FPs when used, if you experience a lot of FPs due to this think of adding more filters such as \"User Agent\" strings and more response codes"], "filters": [], "from": "now-360s", "immutable": false, "index": ["filebeat-*"], "interval": "5m", "rule_id": "5513deaf-f49a-46c2-a6c8-3f111b5cb453", "language": "lucene", "max_signals": 100, "risk_score": 65, "name": "SQL Injection Strings", "query": "((http.request.method:GET AND ((/\\*\\=[Ss][Ee][Ll][Ee][Cc][Tt]\\ \\*/) OR (/\\*\\=[Ss][Ee][Ll][Ee][Cc][Tt]\\%20\\*/) OR (/\\*\\=[Ss][Ee][Ll][Ee][Cc][Tt]\\(\\*/) OR (/\\*[Uu][Nn][Ii][Oo][Nn]\\ [Ss][Ee][Ll][Ee][Cc][Tt]\\*/) OR (/\\*[Uu][Nn][Ii][Oo][Nn]\\%20[Ss][Ee][Ll][Ee][Cc][Tt]\\*/) OR (/\\*[Uu][Nn][Ii][Oo][Nn]\\ [Aa][Ll][Ll]\\ [Ss][Ee][Ll][Ee][Cc][Tt]\\*/) OR (/\\*[Uu][Nn][Ii][Oo][Nn]\\%20[Aa][Ll][Ll]\\%20[Ss][Ee][Ll][Ee][Cc][Tt]\\*/) OR (/\\*[Cc][Oo][Nn][Cc][Aa][Tt]\\(0[Xx]\\*/) OR (/\\*[Oo][Rr][Dd][Ee][Rr]\\ [Bb][Yy]\\ \\*/) OR (/\\*[Oo][Rr][Dd][Ee][Rr]\\%20[Bb][Yy]\\%20\\*/) OR (/\\*[Ii][Nn][Ff][Oo][Rr][Mm][Aa][Tt][Ii][Oo][Nn]\\_[Ss][Cc][Hh][Ee][Mm][Aa]\\.[Tt][Aa][Bb][Ll][Ee][Ss]\\*/) OR (/\\*[Gg][Rr][Oo][Uu][Pp]\\_[Cc][Oo][Nn][Cc][Aa][Tt]\\(\\*/) OR (/\\*[Tt][Aa][Bb][Ll][Ee]\\_[Ss][Cc][Hh][Ee][Mm][Aa]\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\%28[Ss][Ll][Ee][Ee][Pp]\\%2810\\%29\\*/) OR (/\\*\\@\\@[Vv][Ee][Rr][Ss][Ii][Oo][Nn]\\*/) OR (/\\*\\'1\\'\\=\\'1\\*/) OR (/\\*\\%271\\%27\\%3[Dd]\\%271\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt][Cc][Hh][Aa][Rr]\\(\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\ \\*\\ \\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\%20\\*\\%20\\*/) OR (/\\*[Oo][Rr]\\ 1\\=1\\#\\*/) OR (/\\*[Oo][Rr]\\%201\\=1\\#\\*/) OR (/\\*[Cc][Oo][Nn][Cc][Aa][Tt]\\_[Ww][Ss]\\(\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\ [Dd][Aa][Tt][Aa][Bb][Aa][Ss][Ee]\\(\\)\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\ [Vv][Ee][Rr][Ss][Ii][Oo][Nn]\\(\\)\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\%20[Dd][Aa][Tt][Aa][Bb][Aa][Ss][Ee]\\(\\)\\*/) OR (/\\*[Ss][Ee][Ll][Ee][Cc][Tt]\\%20[Vv][Ee][Rr][Ss][Ii][Oo][Nn]\\(\\)\\*/))) AND (NOT http.response.status_code:404))", "meta": {"from": "1m"}, "severity": "high", "tags": ["Initial Access", "T1190"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0001", "reference": "https://attack.mitre.org/tactics/TA0001", "name": "Initial Access"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1190", "name": "Exploit Public-Facing Application", "reference": "https://attack.mitre.org/techniques/T1190"}]}], "version": 1, "references": ["https://www.acunetix.com/blog/articles/exploiting-sql-injection-example/", "https://www.acunetix.com/blog/articles/using-logs-to-investigate-a-web-application-attack/", "https://brightsec.com/blog/sql-injection-payloads/", "https://github.com/payloadbox/sql-injection-payload-list"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md", "timestamp_override": "event.ingested"}
