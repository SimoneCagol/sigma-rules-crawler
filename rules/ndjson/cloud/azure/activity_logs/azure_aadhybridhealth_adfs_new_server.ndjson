{"description": "This detection uses azureactivity logs (Administrative category) to identify the creation or update of a server instance in an Azure AD Hybrid health AD FS service.\nA threat actor can create a new AD Health ADFS service and create a fake server instance to spoof AD FS signing logs. There is no need to compromise an on-prem AD FS server.\nThis can be done programmatically via HTTP requests to Azure.\n", "author": ["Roberto Rodriguez (Cyb3rWard0g)", "OTR (Open Threat Research)", "MSTIC"], "enabled": false, "false_positives": ["Legitimate AD FS servers added to an AAD Health AD FS service instance"], "filters": [], "from": "now-360s", "immutable": false, "index": ["apm-*-transaction", "auditbeat-*", "endgame-*", "filebeat-*", "packetbeat-*", "winlogbeat-*", "logs-*"], "interval": "5m", "rule_id": "288a39fc-4914-4831-9ada-270e9dc12cb4", "language": "lucene", "max_signals": 100, "risk_score": 35, "name": "Azure Active Directory Hybrid Health AD FS New Server", "query": "(CategoryValue:Administrative AND ResourceProviderValue:/[Mm][Ii][Cc][Rr][Oo][Ss][Oo][Ff][Tt]\\.[Aa][Dd][Hh][Yy][Bb][Rr][Ii][Dd][Hh][Ee][Aa][Ll][Tt][Hh][Ss][Ee][Rr][Vv][Ii][Cc][Ee]/ AND ResourceId:*AdFederationService* AND OperationNameValue:/[Mm][Ii][Cc][Rr][Oo][Ss][Oo][Ff][Tt]\\.[Aa][Dd][Hh][Yy][Bb][Rr][Ii][Dd][Hh][Ee][Aa][Ll][Tt][Hh][Ss][Ee][Rr][Vv][Ii][Cc][Ee]\\/[Ss][Ee][Rr][Vv][Ii][Cc][Ee][Ss]\\/[Ss][Ee][Rr][Vv][Ii][Cc][Ee][Mm][Ee][Mm][Bb][Ee][Rr][Ss]\\/[Aa][Cc][Tt][Ii][Oo][Nn]/)", "meta": {"from": "1m"}, "severity": "medium", "tags": ["Defense Evasion", "T1578"], "to": "now", "type": "query", "threat": [{"tactic": {"id": "TA0005", "reference": "https://attack.mitre.org/tactics/TA0005", "name": "Defense Evasion"}, "framework": "MITRE ATT&CK", "technique": [{"id": "T1578", "name": "Modify Cloud Compute Infrastructure", "reference": "https://attack.mitre.org/techniques/T1578"}]}], "version": 1, "references": ["https://o365blog.com/post/hybridhealthagent/"], "license": "https://github.com/Neo23x0/sigma/blob/master/LICENSE.Detection.Rules.md", "timestamp_override": "event.ingested"}
